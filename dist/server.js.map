{"version":3,"sources":["../server.js"],"names":["express","require","app","mongoose","morgan","bodyParser","methodOverride","options","user","pass","useMongoClient","Promise","global","connect","then","console","log","err","use","static","__dirname","urlencoded","json","type","TodoModel","routes","listen"],"mappings":";;AAAA,IAAIA,UAAUC,QAAQ,SAAR,CAAd;AACA,IAAIC,MAAMF,SAAV;AACA,IAAIG,WAAWF,QAAQ,UAAR,CAAf;AACA,IAAIG,SAASH,QAAQ,QAAR,CAAb;AACA,IAAII,aAAaJ,QAAQ,aAAR,CAAjB;AACA,IAAIK,iBAAiBL,QAAQ,iBAAR,CAArB;;AAEA,IAAIM,UAAU;AACVC,UAAM,MADI;AAEVC,UAAM,MAFI;AAGVC,oBAAgB;AAHN,CAAd;;AAMAP,SAASQ,OAAT,GAAmBC,OAAOD,OAA1B;AACAR,SAASU,OAAT,CAAiB,kCAAjB,EAAqDN,OAArD,EAA8DO,IAA9D,CACI,YAAM;AAAEC,YAAQC,GAAR,CAAY,SAAZ;AAAwB,CADpC,EAEI,eAAO;AAAED,YAAQC,GAAR,CAAY,kBAAZ,EAAgCC,GAAhC;AAAsC,CAFnD;;AAKAf,IAAIgB,GAAJ,CAAQlB,QAAQmB,MAAR,CAAeC,YAAY,MAA3B,CAAR;AACAlB,IAAIgB,GAAJ,CAAQd,OAAO,KAAP,CAAR;AACAF,IAAIgB,GAAJ,CAAQb,WAAWgB,UAAX,CAAsB,EAAE,YAAY,MAAd,EAAtB,CAAR;AACAnB,IAAIgB,GAAJ,CAAQb,WAAWiB,IAAX,EAAR;AACApB,IAAIgB,GAAJ,CAAQb,WAAWiB,IAAX,CAAgB,EAAEC,MAAM,0BAAR,EAAhB,CAAR;AACArB,IAAIgB,GAAJ,CAAQZ,gBAAR;;AAEA,IAAIkB,YAAYvB,QAAQ,gCAAR,CAAhB;AACA,IAAIwB,SAASxB,QAAQ,iCAAR,CAAb;AACAwB,OAAOvB,GAAP;;AAEAA,IAAIwB,MAAJ,CAAW,IAAX,EAAiB,YAAY;AACzBX,YAAQC,GAAR,CAAY,4BAAZ;AACH,CAFD","file":"server.js","sourcesContent":["var express = require('express');\nvar app = express();\nvar mongoose = require('mongoose');\nvar morgan = require('morgan');\nvar bodyParser = require('body-parser');\nvar methodOverride = require('method-override');\n\nvar options = {\n    user: 'todo',\n    pass: 't0d0',\n    useMongoClient: true\n}\n\nmongoose.Promise = global.Promise;\nmongoose.connect('mongodb://localhost:27017/tododb', options).then(\n    () => { console.log('Connect') },\n    err => { console.log('Connection error', err) }\n);\n\napp.use(express.static(__dirname + '/src'));\napp.use(morgan('dev'));\napp.use(bodyParser.urlencoded({ 'extended': 'true' }));\napp.use(bodyParser.json());\napp.use(bodyParser.json({ type: 'application/vnd.api+json' }));\napp.use(methodOverride());\n\nvar TodoModel = require('./src/app/api/model/todo.model');\nvar routes = require('./src/app/api/routes/todo.route');\nroutes(app);\n\napp.listen(3000, function () {\n    console.log('App listening on port 3000');\n});"]}